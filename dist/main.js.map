{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/orden/orden.component.css","webpack:///./src/app/orden/orden.component.html","webpack:///./src/app/orden/orden.component.ts","webpack:///./src/app/reporte/reporte.component.css","webpack:///./src/app/reporte/reporte.component.html","webpack:///./src/app/reporte/reporte.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    private http: HttpClient,  \n\n  ) { }\n\n  public url_base = 'https://bitplacecoin.com/api_lar/public';  // URL to web api\n\n\n  addUser(model){     \n    const url = `${this.url_base}/api/adduser`;\n    return this.http.post(url, model)   \n  \n  }\n\n  userloggedin (model) {        \n      const url = `${this.url_base}/api/userlogged`; \n    return this.http.post(url, model)  \n    }  \n\n    addOrden (orden) {        \n      const url = `${this.url_base}/api/services`; \n    return this.http.post(url, orden)  \n    } \n\n    getOrdenes () {        \n      const url = `${this.url_base}/api/services`; \n    return this.http.get(url)  \n    } \n\n    getUser (id) {           \n      const url = `${this.url_base}/api/getuser/${id}`; \n    return this.http.get(url)  \n    } \n    getClientes () {           \n      const url = `${this.url_base}/api/getclientes`; \n    return this.http.get(url)     \n    } \n    getReport (cli) {        \n      const url = `${this.url_base}/api/getreport/${cli}`; \n    return this.http.get(url)  \n    } \n\n    allUser(){\n      const url = `${this.url_base}/api/alluser`; \n      return this.http.get(url)  \n    }\n\n\n    update(model){\n\n      const url = `${this.url_base}/api/services/${model.id}`; \n      return this.http.put(url, model)  \n    }\n  \n}\n","import { ReporteComponent } from './reporte/reporte.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrdenComponent } from './orden/orden.component';\n\n\nconst routes: Routes = [    \n  {  path: '', redirectTo: '/login', pathMatch: 'full' },\n   { path: 'home/:id', component: HomeComponent },\n   { path: 'orden', component: OrdenComponent },\n   { path: 'report', component: ReporteComponent },\n   { path: '**', component: LoginComponent }\n];\n\n@NgModule({   \n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"\\n  <nav>\\n    <div class=\\\"nav-wrapper\\\">\\n      <a href=\\\"#\\\" class=\\\"brand-logo\\\">ServiceTechnologies</a>\\n      <a href=\\\"#\\\" data-target=\\\"mobile-demo\\\" class=\\\"sidenav-trigger\\\"><i class=\\\"material-icons\\\">menu</i></a>\\n      <ul class=\\\"right hide-on-med-and-down\\\">\\n        <li *ngIf=\\\"isLogin()\\\"><a [routerLink]=\\\"['home', userId]\\\">Home</a></li>\\n        <li><a routerLink=\\\"orden\\\">Crear Orden</a></li>\\n        <li><a routerLink=\\\"report\\\">Reportes</a></li>\\n        <li *ngIf=\\\"!isLogin()\\\"><a routerLink=\\\"login\\\">Login</a></li>\\n        <li *ngIf=\\\"isLogin()\\\" (click)=\\\"logout()\\\"><a>Logout</a></li>\\n      </ul>\\n    </div>\\n  </nav>\\n  <ul class=\\\"sidenav\\\" id=\\\"mobile-demo\\\">\\n    <li *ngIf=\\\"isLogin()\\\"><a [routerLink]=\\\"['home', userId]\\\">Home</a></li>\\n    <li><a routerLink=\\\"orden\\\">Crear Orden</a></li>\\n    <li><a routerLink=\\\"report\\\">Reportes</a></li>\\n    <li *ngIf=\\\"!isLogin()\\\"><a routerLink=\\\"login\\\">Login</a></li>\\n    <li *ngIf=\\\"isLogin()\\\" (click)=\\\"logout()\\\"><a>Logout</a></li>\\n  </ul>\\n  <router-outlet></router-outlet>\"","import { ApiService } from './api.service';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\ndeclare var M\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']   \n})\nexport class AppComponent {        \n  \n  login = true\n  userId\n  constructor( \n    private router:Router,\n    private apiService: ApiService\n\n    ) {}\n\n  ngOnInit()      \n  {\n        \n    this.materialize() \n    this.isLogin()\n  }\n\n  materialize(){   \n    document.addEventListener('DOMContentLoaded', function() {\n      var elems = document.querySelectorAll('.sidenav');\n      var instances = M.Sidenav.init(elems, Option);\n    });\n  }\n\n  isLogin(){\n    if (localStorage.getItem('id')) {  \n     this.userId  = localStorage.getItem('id')\n      return true\n    }else{\n      return false\n    }\n  }\n\n  logout(){\n    localStorage.removeItem('id')\n    this.isLogin()\n    this.router.navigate([`login`])\n\n  }\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { ReactiveFormsModule }  from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { OrdenComponent } from './orden/orden.component';\nimport { ReporteComponent } from './reporte/reporte.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    OrdenComponent,\n    ReporteComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col s6\\\">\\n\\n   \\n     <h6 *ngIf=\\\"user\\\">Ordenes creadas por: {{user.email}}</h6>\\n    <table>\\n        <thead>\\n          <tr>\\n              <th>ID Orden</th>\\n              <th>Ciente</th>\\n              <th></th>\\n          </tr>\\n        </thead>\\n\\n        <tbody>\\n          <tr *ngFor=\\\"let dat of data\\\">\\n            <td>{{dat.id}}</td>\\n            <td>{{dat.cliente}}</td>\\n            <td> <a (click)=\\\"editArt(dat.id)\\\" class=\\\"waves-effect waves-light btn-small blue\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n            </td>\\n           \\n          </tr>\\n         \\n        </tbody>\\n      </table>\\n    </div>\\n\\n    <div class=\\\"col s6\\\">\\n        <form  #registerForm=\\\"ngForm\\\" >\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s6\\\">\\n                <div class=\\\"input-field\\\">\\n                  <input placeholder=\\\"cliente\\\" type=\\\"text\\\" class=\\\"validate\\\" id=\\\"cliente\\\" required \\n                  [(ngModel)]=\\\"model.cliente\\\" name=\\\"cliente\\\">\\n                  <label for=\\\"cliente\\\">Cliente</label>\\n                </div>\\n              </div>\\n              <div class=\\\"col s6\\\">\\n                \\n              </div>\\n            </div>\\n           \\n          \\n          \\n        \\n          \\n          <table >\\n            <thead>\\n              <tr>\\n                  <th>Artículo</th>\\n                  <th>Tipo</th>\\n                  <th>SKU</th>\\n              </tr>\\n            </thead>\\n          \\n            <tbody>\\n              <tr *ngFor=\\\"let art of model.articulos, let i=index\\\">\\n                  <td>\\n                    <input type=\\\"text\\\" class=\\\"validate\\\"  required \\n                    [(ngModel)]=\\\"model.articulos[i].articulo\\\" name=\\\"articulo{{i}}\\\">\\n                  </td>\\n                <td>\\n                    <input type=\\\"text\\\" class=\\\"validate\\\"  required \\n                    [(ngModel)]=\\\"model.articulos[i].tipo\\\" name=\\\"tipo{{i}}\\\">\\n                </td>\\n                <td>\\n                    <input type=\\\"text\\\" class=\\\"validate\\\"  required \\n                    [(ngModel)]=\\\"model.articulos[i].sku\\\" name=\\\"sku{{i}}\\\">\\n                </td>\\n              \\n              </tr>\\n           \\n            </tbody>\\n          </table>\\n            <div class=\\\"progress\\\" *ngIf=\\\"preloader\\\">\\n              <div class=\\\"indeterminate\\\"></div>\\n          </div>\\n          <br>\\n          <div *ngIf=\\\"submitLogin\\\">\\n            <button class=\\\"btn waves-effect waves-light btn-small\\\" style=\\\"float: right;\\\"  \\n             (click)=\\\"addOrden(model)\\\">\\n            Actualizar Orden<i class=\\\"material-icons right\\\">send</i>\\n          </button>\\n          \\n          </div>\\n          </form>\\n    </div> \\n</div>\\n\"","import { ApiService } from './../api.service';\nimport { Component, OnInit } from '@angular/core';\ndeclare var M\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private apiService: ApiService\n  ) { }\n\n  model:any = {}\n  preloader = false\n  submitLogin = true\n  data:any = []\n  user:any={}\n\n\n  ngOnInit() {\n    this.getOrdenes()\n    this.getUser()\n  }\n\ngetOrdenes(){\n  this.apiService.getOrdenes()\n  .subscribe(dat=>{\n    for (const ite of dat) {\n      if (ite.user_id == localStorage.getItem('id')) {\n        this.data.push(ite)\n      }\n    }\n  })\n}\n\ngetUser(){\n  this.apiService.getUser(localStorage.getItem('id'))\n  .subscribe(dat=>{\n    this.user=dat\n  })\n}\n\neditArt(id){\n  for (const ite of this.data) {\n    if (ite.id == id) {\n      this.model = ite\n    }\n    \n  }\n\n  \n}\n\naddOrden(model){\n  this.preloader = true     \n  this.submitLogin = false\n  this.apiService.update(model)\n  .subscribe(dat=>{\n    this.model = {}\n    M.toast({html: 'Orden actualizada correctamente', classes: 'rounded teal'})\n    this.preloader = false\n  this.submitLogin = true\n  })\n}\n\n}\n","module.exports = \"\"","module.exports = \"\\n    <div class=\\\"container\\\">\\n      <div class=\\\"container\\\">\\n          <div class=\\\"card-panel\\\">\\n        <h4 *ngIf=\\\"registrar\\\">Iniciar sesión</h4> \\n        <h4 *ngIf=\\\"!registrar\\\">Registrar Usuario</h4> \\n        <br>\\n        <form  #registerForm=\\\"ngForm\\\" >\\n        \\n          <div class=\\\"input-field\\\">\\n            <input type=\\\"email\\\" class=\\\"validate\\\" id=\\\"email\\\" required \\n            (keyup)=\\\"confirmEmail(model.email)\\\" (blur)=\\\"confirmEmail(model.email)\\\"\\n            [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\">\\n            <label for=\\\"email\\\">Email</label>\\n          </div>\\n    \\n          <div class=\\\"input-field\\\">\\n            <input type=\\\"password\\\" class=\\\"validate\\\" id=\\\"password\\\" required (keyup)=\\\"countPass()\\\"\\n            [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\">\\n            <label for=\\\"password\\\">Password  (mínimo 6 carácteres)</label>\\n            <span class=\\\"new badge\\\" data-badge-caption=\\\"/ 6\\\">{{lengPass}}</span>\\n          </div>\\n    \\n          <div class=\\\"input-field\\\" *ngIf=\\\"!registrar\\\">\\n            <input type=\\\"password\\\" class=\\\"validate\\\" id=\\\"Confirm_password\\\" required  (keyup)=\\\"countPass()\\\"\\n            (keyup)=\\\"confirmPass()\\\"\\n            [(ngModel)]=\\\"model.confirm_password\\\" name=\\\"confirm_password\\\">\\n            <label for=\\\"Confirm_password\\\">Confirma el Password\\n                <i *ngIf=\\\"Confirm_password\\\" class=\\\"material-icons Small\\\" style=\\\"color:green\\\">check_circle</i>   \\n            </label>\\n            <span class=\\\"new badge\\\" data-badge-caption=\\\"/ 6\\\">{{lengPassCon}}</span>\\n          </div>\\n\\n          <div class=\\\"progress\\\" *ngIf=\\\"preloader\\\">\\n            <div class=\\\"indeterminate\\\"></div>\\n        </div>\\n        <div *ngIf=\\\"submitLogin\\\">\\n          <a *ngIf=\\\"registrar\\\" (click)=\\\"register()\\\">Registrar</a>\\n          <a *ngIf=\\\"!registrar\\\" (click)=\\\"login()\\\">Login</a>\\n          <button *ngIf=\\\"!registrar\\\" class=\\\"btn waves-effect waves-light btn-small\\\" style=\\\"float: right;\\\"  \\n          [disabled]=\\\"!registerForm.form.valid || !Confirm_password || !emailConfirm\\\" (click)=\\\"add()\\\">\\n          Crear cuenta<i class=\\\"material-icons right\\\">send</i>\\n        </button>\\n        <button *ngIf=\\\"registrar\\\" class=\\\"btn waves-effect waves-light btn-small\\\" style=\\\"float: right;\\\"  \\n        [disabled]=\\\"!registerForm.form.valid || !emailConfirm\\\" (click)=\\\"loginadd()\\\">\\n        Login<i class=\\\"material-icons right\\\">send</i>\\n      </button>\\n        </div>\\n        </form>\\n <br>\\n    </div>\\n  </div>\\n  </div>\"","import { ApiService } from './../api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\ndeclare var M\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  constructor( \n    private router:Router,\n    private apiService: ApiService   \n    ) {}\n   \n    registrar= true   \n  preloader = false\n  submitLogin = true\n    model:any = {}\n  emailCheck = false\n  emailConfirm = false\n  lengPass = 0\n  lengPassCon = 0\n  validPass = false\n  Confirm_password = false\n  ngOnInit() {\n  }\n\n\n  confirmPass(){  \n    if (this.countPass()) {\n      this.Confirm_password = true\n    }else{\n      this.Confirm_password = false\n\n    }\n    }\n\n    countPass(){\n      if (this.model.password) {\n        this.lengPass = this.model.password.length;\n    \n      }\n      if (this.model.confirm_password) {\n        this.lengPassCon = this.model.confirm_password.length;\n    \n      }\n      if ( this.lengPass > 5 && this.lengPassCon > 5){\n        if (this.model.password == this.model.confirm_password) {\n                this.validPass = true\n                return true\n        }else{\n          this.validPass = false\n          return false\n        }\n      }else{\n        this.validPass = false\n        return false\n      }\n        \n      \n    \n    }\n\n    confirmEmail(email){  \n      var regExp = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i\n         \n        if(regExp.test(email)){\n          this.emailConfirm = true\n        \n      }else{\n        this.emailConfirm = false\n    \n      }\n    }\n\n    add(): void {  \n       \n      var regExp = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i\n       \n      if(regExp.test(this.model.email) && this.countPass()){\n  \n      this.preloader = true\n      this.submitLogin = false    \n      this.apiService.addUser(this.model)\n        .subscribe(id => { \n          localStorage.setItem('id', `${id}`)\n\n         this.router.navigate([`home/${id}`])\n         M.toast({html: 'Usuario creado correctamente', classes: 'rounded teal'})\n        },\n        error => {\n          this.preloader = false,\n          this.submitLogin = true,\n          M.toast({html: 'El email ingresado ya existe', classes: 'rounded teal'})\n        }\n        );\n      }else{\n        M.toast({html: 'Los datos ingresados son incorrectos', classes: 'rounded teal'})\n  \n      }\n  \n    }\n\n    register(){\n      this.registrar = false\n    }\n\n    login(){\n      this.registrar = true\n    }\n\n    loginadd(){\n    this.apiService.userloggedin(this.model)\n    .subscribe(dat =>{\n      if (dat) {\n        localStorage.setItem('id', `${dat.id}`)\n        this.router.navigate([`home/${dat.id}`])\n        M.toast({html: `Bienvenido ${dat.email}`, classes: 'rounded teal'})\n      }else{\n        M.toast({html: 'Los datos son incorrectos', classes: 'rounded teal'})\n      }\n     \n    },\n    error => {\n      M.toast({html: 'Los datos son incorrectos', classes: 'rounded teal'})\n\n    \n    })\n\n    }\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card-panel\\\">\\n<h4>Crear Orden</h4> \\n<br>\\n<form  #registerForm=\\\"ngForm\\\" >\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s6\\\">\\n      <div class=\\\"input-field\\\">\\n        <input type=\\\"text\\\" class=\\\"validate\\\" id=\\\"cliente\\\" required \\n        [(ngModel)]=\\\"model.cliente\\\" name=\\\"cliente\\\">\\n        <label for=\\\"cliente\\\">Cliente</label>\\n      </div>\\n    </div>\\n    <div class=\\\"col s6\\\">\\n      <label>Técnico</label>\\n      <select class=\\\"browser-default\\\" name=\\\"user_id\\\"  [(ngModel)]=\\\"model.user_id\\\" required>\\n        <option value=\\\"\\\"  disabled selected>Selecciona...</option>\\n        <option *ngFor=\\\"let user of users\\\" value=\\\"{{user.id}}\\\">{{user.email}}</option>\\n      </select>\\n    </div>\\n  </div>\\n \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s4\\\">\\n      <input type=\\\"hidden\\\"  [(ngModel)]=\\\"arti.id\\\" name=\\\"id\\\">\\n      <div class=\\\"input-field\\\">\\n        <input type=\\\"text\\\" class=\\\"validate\\\" id=\\\"articulo\\\"  \\n        [(ngModel)]=\\\"arti.articulo\\\" name=\\\"articulo\\\">\\n        <label for=\\\"articulo\\\">Nombre artículo</label>\\n      </div>\\n    </div>\\n    <div class=\\\"col s4\\\">\\n      <div class=\\\"input-field\\\">\\n        <input type=\\\"text\\\" class=\\\"validate\\\" id=\\\"tipo\\\"  \\n        [(ngModel)]=\\\"arti.tipo\\\" name=\\\"tipo\\\">\\n        <label for=\\\"tipo\\\">Tipo artículo</label>\\n      </div>\\n    </div>\\n    <div class=\\\"col s4\\\">\\n      <div class=\\\"input-field\\\">\\n        <input type=\\\"text\\\" class=\\\"validate\\\" id=\\\"sku\\\"  \\n        [(ngModel)]=\\\"arti.sku\\\" name=\\\"sku\\\">\\n        <label for=\\\"sku\\\">SKU artículo</label>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n  <button *ngIf=\\\"!btn_articulo\\\" class=\\\"btn waves-effect waves-light btn-small blue\\\" style=\\\"float: right;\\\"  \\n  (click)=\\\"editArticulo()\\\">\\n  Actualizar Articulo</button>\\n<button *ngIf=\\\"btn_articulo\\\" class=\\\"btn waves-effect waves-light btn-small\\\" style=\\\"float: right;\\\"  \\n(click)=\\\"addArticulo()\\\">\\nAdicionar Articulo</button>\\n</div>\\n\\n<table *ngIf=\\\"tableArt\\\">\\n  <thead>\\n    <tr>\\n        <th>Artículo</th>\\n        <th>Tipo</th>\\n        <th>SKU</th>\\n        <th></th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let art of articulos, let i=index\\\">\\n      <td>{{art.articulo}}</td>\\n      <td>{{art.tipo}}</td>\\n      <td>{{art.sku}}</td>\\n      <td> <a (click)=\\\"editArt(i)\\\" class=\\\"waves-effect waves-light btn-small blue\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n        <a (click)=\\\"deleteArt(i)\\\" class=\\\"waves-effect waves-light btn-small red\\\"><i class=\\\"material-icons\\\">delete</i></a>\\n      </td>\\n    </tr>\\n \\n  </tbody>\\n</table>\\n  <div class=\\\"progress\\\" *ngIf=\\\"preloader\\\">\\n    <div class=\\\"indeterminate\\\"></div>\\n</div>\\n<div *ngIf=\\\"submitLogin\\\">\\n  <button class=\\\"btn waves-effect waves-light btn-small\\\" style=\\\"float: right;\\\"  \\n  [disabled]=\\\"!registerForm.form.valid || articulos.length==0\\\" (click)=\\\"addOrden()\\\">\\n  Crear Orden<i class=\\\"material-icons right\\\">send</i>\\n</button>\\n\\n</div>\\n</form>\\n<br>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\ndeclare var M\n@Component({\n  selector: 'app-orden',\n  templateUrl: './orden.component.html',\n  styleUrls: ['./orden.component.css']\n})\nexport class OrdenComponent implements OnInit {\n\n  constructor(\n    private apiService: ApiService\n\n  ) { }\n  model:any = {}\n  preloader = false\n  submitLogin = true\n users:any = []\n arti: any  ={}\n articulos: any = []\n tableArt =  false\n btn_articulo = true\n\n  ngOnInit() {\n    this.allUser()\n  }\n\n  addOrden(){\n    let arti = []\n  \n    for (const ite of this.articulos) {\n      var dat={articulo:ite.articulo, tipo:ite.tipo, sku:ite.sku}\n      arti.push(dat)\n    }\n\n    let orden = {\n      model: this.model,\n      arti: arti\n    }\n    \n    this.preloader = true\n    this.submitLogin = false\n    this.apiService.addOrden(orden)\n    .subscribe(dat=>{\n      this.preloader = false\n      this.submitLogin = true\n      this.articulos = []\n      this.tableArt =  false\n      this.arti = []\n      this.model = {}\n\n      M.toast({html: 'Orden creada correctamente', classes: 'rounded teal'})\n\n    })\n    \n    \n  }\n\n  allUser(){\n    this.apiService.allUser()\n    .subscribe(dat => {\n      this.users = dat\n    })\n  }\n\n  addArticulo(){\n    this.articulos.push(this.arti)\n    if (this.articulos.length> 0) {\n      this.tableArt =  true\n    }\n    this.arti = []\n  \n\n\n  }\n\n  deleteArt(i){\n    this.articulos.splice(i, 1)\n    if (this.articulos.length == 0) {  \n      this.tableArt =  false    \n    }\n    this.arti = []\n    this.btn_articulo = true\n\n  }\n\n  editArt(i){\n    this.arti = this.articulos[i]\n    this.arti.id = i\n    this.btn_articulo = false\n\n  }\n\n  editArticulo(){\n    this.arti = []\n    this.btn_articulo = true\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<br>\\n<div class=\\\"container\\\">\\n  <h6>Reporte por cliente</h6>\\n    <form  #registerForm=\\\"ngForm\\\" >\\n        <div class=\\\"row\\\">\\n         \\n          \\n          <div class=\\\"col s6\\\">\\n            <label>cliente</label>\\n            <select class=\\\"browser-default\\\" required [(ngModel)]=\\\"model.cliente\\\" name=\\\"cliente\\\" (change)=\\\"changeSelec()\\\">\\n              <option value=\\\"\\\"  disabled selected>Selecciona...</option>\\n              <option *ngFor=\\\"let cli of clientes\\\" value=\\\"{{cli}}\\\">{{cli}}</option>\\n            </select>\\n          </div>\\n        </div>\\n       \\n      \\n      \\n     \\n      \\n   \\n        <div class=\\\"progress\\\" *ngIf=\\\"preloader\\\">\\n          <div class=\\\"indeterminate\\\"></div>\\n      </div>\\n      <div *ngIf=\\\"submitLogin\\\">\\n        <button class=\\\"btn waves-effect waves-light btn-small\\\" style=\\\"float: right;\\\"  \\n        [disabled]=\\\"!registerForm.form.valid\\\" (click)=\\\"addOrden()\\\">\\n        Crear Reporte<i class=\\\"material-icons right\\\">send</i>\\n      </button>\\n      \\n      </div>\\n      </form>\\n      <br>\\n      <p>{{json}}</p>\\n</div>\"","import { ApiService } from './../api.service';\nimport { Component, OnInit } from '@angular/core';\ndeclare var M\n@Component({\n  selector: 'app-reporte',\n  templateUrl: './reporte.component.html',\n  styleUrls: ['./reporte.component.css']\n})\nexport class ReporteComponent implements OnInit {\n\n  constructor(\n    private apiService: ApiService\n\n  ) { }\n  model:any = {}\njson = ''\n  preloader = false\n  submitLogin = true\n  clientes:any=[]\n  ngOnInit() {\n    this.getClientes()\n  }\n\n  getClientes(){\n    this.apiService.getClientes()\n    .subscribe(dat=>{\n      this.clientes = dat\n    })\n  }\n\n  addOrden(){\n    this.apiService.getReport(this.model.cliente)\n    .subscribe(dat=>{   \n      this.json = JSON.stringify(dat)   \n      M.toast({html: 'Reporte creado correctamente', classes: 'rounded teal'})\n      window.open(`${this.apiService.url_base}/api/getreport/${this.model.cliente}`, '_blank')\n    })\n  }\n\n  changeSelec(){\n    this.json = ''\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}